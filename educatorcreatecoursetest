package pack1;

import static org.junit.jupiter.api.Assertions.*;

import java.time.Duration;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

class educatorcreatecoursetest {

    WebDriver driver;

    @BeforeEach
    void setUp() {
        driver = new ChromeDriver();
        driver.get("http://localhost:3000/educatorcreatecourse"); 
    }

    @Test
    void testPageLoadSuccessfully() {
        WebElement header = driver.findElement(By.xpath("/html/body/div/div/div/main/div[1]"));
        assertEquals("Add Course", header.getText(), "Header should display 'Add Course'.");
    }

    @Test
    void testEmptyTitleField() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(2));
        
        WebElement titleField = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[1]/input"));
        titleField.sendKeys("");

        WebElement addButton = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[7]/button[1]"));
        addButton.click();


		Alert alert = wait.until(ExpectedConditions.alertIsPresent());
        String alertText = alert.getText();
        assertEquals("Please fill in all fields.", alertText, "Alert message does not match expected text.");
        alert.accept();
    }



    @Test
    void testAddScheduleWithoutDays() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));

        WebElement titleField = driver.findElement(By.name("title"));
        titleField.sendKeys("New Course");

        WebElement startDateField = driver.findElement(By.name("startDate"));
        startDateField.sendKeys("2025-01-15");

        WebElement endDateField = driver.findElement(By.name("endDate"));
        endDateField.sendKeys("2025-01-16");
        
        Select weekDropdown = new Select(driver.findElement(By.name("selectedWeek")));
        weekDropdown.selectByIndex(0);

        WebElement descriptionField = driver.findElement(By.name("description"));
        descriptionField.sendKeys("This is a test course.");

        WebElement addButton = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[7]/button[1]"));
        addButton.click();

        try {
            Alert alert = wait.until(ExpectedConditions.alertIsPresent());
            String alertText = alert.getText();
            System.out.println("Actual Alert Text: " + alertText);
            assertEquals("Course added successfully!", alertText, "Alert message does not match expected text.");
            alert.accept();
        } catch (Exception e) {
            fail("Alert not found or text did not match: " + e.getMessage());
        }
    }

    @Test
    void testInvalidTimeRangeInSchedule() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(2));

        System.out.println("Filling start date...");
        WebElement startDateField = driver.findElement(By.name("startDate"));
        startDateField.sendKeys("2025-01-15");

        System.out.println("Filling end date...");
        WebElement endDateField = driver.findElement(By.name("endDate"));
        endDateField.sendKeys("2025-02-15");

        System.out.println("Selecting a week...");
        Select weekDropdown = new Select(driver.findElement(By.name("selectedWeek")));
        weekDropdown.selectByIndex(0);

        System.out.println("Selecting Monday...");
        WebElement mondayCheckbox = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[5]/div/div[1]/input"));
        mondayCheckbox.click();

        System.out.println("Entering invalid time range...");
        WebElement startTimeField = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[5]/div/div[1]/div/input[1]"));
        startTimeField.sendKeys("18:00");

        WebElement endTimeField = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[5]/div/div[1]/div/input[2]"));
        endTimeField.sendKeys("17:00");

        System.out.println("Clicking add button...");
        WebElement addButton = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[7]/button[1]"));
        addButton.click();

        try {
            System.out.println("Waiting for alert...");
            Alert alert = wait.until(ExpectedConditions.alertIsPresent());
            String alertText = alert.getText();
            System.out.println("Alert Text: " + alertText);

            assertEquals("End time for Monday must be later than the start time.", alertText, 
                "Alert message does not match expected text.");
            alert.accept();
        } catch (Exception e) {
            fail("Test failed: " + e.getMessage());
        }
    }

    @Test
    void testSuccessfulCourseCreation() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(2));
        WebElement titleField = driver.findElement(By.name("title"));
        titleField.sendKeys("New Course");

        WebElement startDateField = driver.findElement(By.name("startDate"));
        startDateField.sendKeys("2025-01-15");

        WebElement endDateField = driver.findElement(By.name("endDate"));
        endDateField.sendKeys("2025-01-16");

        Select weekDropdown = new Select(driver.findElement(By.name("selectedWeek")));
        weekDropdown.selectByIndex(1);

        WebElement mondayCheckbox = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[5]/div/div[1]/input"));
        mondayCheckbox.click();

        WebElement startTimeField = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[5]/div/div[1]/div/input[1]"));
        startTimeField.sendKeys("09:00");

        WebElement endTimeField = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[5]/div/div[1]/div/input[2]"));
        endTimeField.sendKeys("12:00");

        WebElement descriptionField = driver.findElement(By.name("description"));
        descriptionField.sendKeys("This is a test course.");

        WebElement addButton = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[7]/button[1]"));
        addButton.click();

		Alert alert = wait.until(ExpectedConditions.alertIsPresent());
        String alertText = alert.getText();
        assertEquals("Course added successfully!", alertText);
        alert.accept();
    }

    @Test
    void testCancelButtonNavigation() {
        WebElement cancelButton = driver.findElement(By.xpath("/html/body/div/div/div/main/div[2]/div[7]/button[2]"));
        cancelButton.click();

        String expectedUrl = "http://localhost:3000/educatorCourseList";
        assertEquals(expectedUrl, driver.getCurrentUrl(), "The user should be redirected to the course list page.");
    }

    @AfterEach
    void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
